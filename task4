实验名称：周期信号的傅里叶级数

实验日期：2015.5.4
一、实验目的 
1、分析典型的矩形脉冲信号，了解矩形脉冲信号谐波分量的构成。
2、观察矩形脉冲信号通过多个数字滤波器后，分解出各谐波分量的情况。
3、掌握用傅里叶级数进行谐波分析的方法。
4、观察矩形脉冲信号分解出的各谐波分量可以通过叠加合成出原矩形脉冲信号。
二、预习内容
1、周期信号的傅里叶级数分解及其物理意义。
2、典型信号傅里叶级数计算方法。
三、实验原理
1. 信号的时间特性与频率特性
信号可以表示为随时间变化的物理量，比如电压和电流等，其特性主要表现为随时间的变化，波形幅值的大小、持续时间的长短、变化速率的快慢、波动的速度及重复周期的大小等变化，信号的这些特性称为时间特性。
信号还可以分解为一个直流分量和许多不同频率的正弦分量之和。主要表现在各频率正弦分量所占比重的大小不同；主要频率分量所占的频率范围也不同，信号的这些特性称为信号的频率特性。
无论是信号的时间特性还是频率特性都包含了信号的全部信息量。
2. 信号的频谱
信号的时间特性和频率特性是对信号的两种不同的描述方式。根据傅里叶级数原理，任意一个时域的周期信号，只要满足狄利克莱(Dirichlet)条件，就可以将其展开成三角形式或指数形式的傅里叶级数。例如，对于一个周期为T的时域周期信号，可以用三角形式的傅里叶级数求出它的各次分量，在区间内表示为

即将信号分解成直流分量及许多余弦分量和正弦分量，研究其频谱分布情况。

图4-1 信号的时域特性和频域特性
3. 信号的时间特性与频率特性关系
信号的时域特性与频域特性之间有着密切的内在联系，这种联系可以用图4-1来形象地表示。其中图4-1(a)是信号在幅度--时间--频率三维坐标系统中的图形；图4-1(b)是信号在幅度--时间坐标系统中的图形即波形图；把周期信号分解得到的各次谐波分量按频率的高低排列，就可以得到频谱图。反映各频率分量幅度的频谱称为振幅频谱。图4-1(c)是信号在幅度--频率坐标系统中的图形即振幅频谱图。反映各分量相位的频谱称为相位频谱。
4. 信号频谱的测量
在本实验中只研究信号振幅频谱。周期信号的振幅频谱有三个性质：离散性、谐波性、收敛性。测量时利用了这些性质。从振幅频谱图上，可以直观地看出各频率分量所占的比重。测量方法有同时分析法和顺序分析法。
同时分析法的基本工作原理是利用多个滤波器，把它们的中心频率分别调到被测信号的各个频率分量上。当被测信号同时加到所有滤波器上，中心频率与信号所包含的某次谐波分量频率一致的滤波器便有输出。在被测信号发生的实际时间内可以同时测得信号所包含的各频率分量。
5. 周期方波信号的傅里叶级数
5.1 一个周期为的正方波， 如图下图4-2所示，一个周期内从幅值为1，其余为0。

图4-2 周期性的正方波信号
由傅里叶级数展开式可知，方波信号傅里叶级数系数为：
；
则该周期信号可以表示为傅里叶级数的形式：

因为，当k为偶数时，所以

进一步带入得

当占空比为0.5时候的方波，即时

可以看出方波各频率分量中，直流分量为0.5；偶次谐波分量为零；各奇次谐波分量比值为。
5.2方波，如图4-3所示，可以分解为


图4-3 周期性的方波信号
可以看出方波各频率分量中，直流分量为零；偶次谐波分量为零；各奇次谐波分量比值为。
6. 周期信号的合成吉布斯现象（Gibbs）
根据傅里叶级数可以将周期信号分解成直流分量、基波以及各次谐波分量，同样，由直流分量、基波和各次谐波分量可以叠加出来一个周期信号。例如前述的方波信号，可以由其基波和各次谐波分量按照比例叠加出来，合成方波信号与原信号的误差取决于傅里叶级数的项数。
合成波形所包含的谐波分量越多，它越逼近原方波信号，但是间断点除外。用有限项傅里叶级数表示有间断点的信号时，在间断点附近不可避免的会出现振荡和超量。超量的幅度不会随所取项数的增加而减小。只是随着项数的增多，振荡频率变高，并向间断点处压缩，从而使它所占有的能量减少。这种现象称为吉布斯现象。
五、实验内容
1.信号的分解与合成Matlab仿真实验
1.1方波信号的分解
思考：参考下面程序，将频率为50Hz幅值为3的方波进行分解，给出前5项谐波，并在不同坐标系和同一坐标系下绘制各次谐波波形。
参考程序及运行结果如下：
t=0:0.01:2*pi;                    %时间间隔为0.01
y=zeros(10,max(size(t)));           %10*629（t的长度）的矩阵
x=zeros(10,max(size(t)));
for k=1:2:9                       %奇次谐波1,3,5,7,9
    x1=sin(k*t)/k;                 %各次谐波正弦分量
    x(k,:)=x(k,:)+x1;               %x第k(1,3,5,7,9)行存放k次谐波的629个值
    y((k+1)/2,:)=x(k,:);             %矩阵非零行向量移至1-5行
end
subplot(2,1,1);
plot(t,y(1:5,:));                    %绘制y矩阵中1-5行随时间波形
grid;
halft=ceil(length(t)/2);              %行向量长度减半（由于对称前后段一致）
subplot(2,1,2);                    %绘制三维图形：矩阵y中全部行向量的一半
mesh(t(1:halft),[1:10],y(:,1:halft));

图4-4 周期性的方波的分解

clear all;
t=0:0.02:3*pi;
y=zeros(10,max(size(t)));
x=zeros(10,max(size(t)));
for k=1:2:9
    x1=sin(k*t)/k*3;
    x(k,:)=x(k,:)+x1;
    y((k+1)/2,:)=x(k,:);
end
 
subplot(4,2,1);
plot(t,y(1,:));
subplot(4,2,2);
plot(t,y(2,:));
subplot(4,2,3);
plot(t,y(3,:));
subplot(4,2,4);
plot(t,y(4,:));
subplot(4,2,5);
plot(t,y(5,:));
subplot(4,2,6);
plot(t,y(1:5,:));
grid on;
halft=ceil(length(t)/2);
subplot(4,2,7);
mesh(t(1:halft),1:10,y(:,1:halft));




1.2方波信号的合成
思考：
(1)参考实验原理内容解释下面程序中“f1=f1+cos(pi*n*t)*sinc(n/2)”；观察N值改变时合成波形的变化。







t=-4.5:0.001:5.5;
t1=-4.499:0.001:5.5;
x=[ones(1,1000),zeros(1,1000)];
x=[x,x,x,x,x];
subplot(1,2,1);
plot(t1,x,'linewidth',1.5);
axis([-4.5,5.5,-0.5,1.5]);
N=100;
c0=0.5;
f1=c0*ones(1,length(t));
for n=1:N
    f1=f1+cos(pi*n*t)*sinc(n/2);
end
subplot(1,2,2);
plot(t,f1,'r','linewidth',1.5);
axis([-4.5,5.5,-0.5,1.5]);
(2)参考下面程序分别对和两个周期为2的方波进行合成，注意比较：
①原方波与合成方波；
②两个方波合成有何不同；
③当傅里叶级数项数增加时合成方波的变化。
参考程序及运行结果如下：
t=-4.5:0.001:5.5;
t1=-4.499:0.001:5.5;
x=[ones(1,1000),zeros(1,1000)];
x=[x,x,x,x,x];
subplot(1,2,1);
plot(t1,x,'linewidth',1.5);
axis([-4.5,5.5,-0.5,1.5]);
N=10;
c0=0.5;
f1=c0*ones(1,length(t))
for n=1:N
    f1=f1+cos(pi*n*t)*sinc(n/2);
end
subplot(1,2,2);
plot(t,f1,'r','linewidth',1.5);
axis([-4.5,5.5,-0.5,1.5]);

图4-5 周期性的方波的合成











X1(t):
t=-9:0.002:11;
t1=-8.999:0.002:11;
x=[ones(1,1000),zeros(1,1000)];
x=[x,x,x,x,x];
subplot(3,1,1);
plot(t1,x,'linewidth',1.5);
axis([-9,11,-0.5,1.5]);
N=10;
c0=0.5;
f1=c0*ones(1,length(t));
for n=1:N
    f1=f1+cos(0.5*pi*n*t)*sinc(n/2);
end
subplot(3,1,2);
plot(t,f1,'r','linewidth',1.5);
axis([-9,11,-0.5,1.5]);
N=20;
c0=0.5;
f1=c0*ones(1,length(t));
for n=1:N
    f1=f1+cos(0.5*pi*n*t)*sinc(n/2);
end
subplot(3,1,3);
plot(t,f1,'r','linewidth',1.5);
axis([-9,11,-0.5,1.5]);


X2(t):

t=-4.5:0.001:5.5;
t1=-4.499:0.001:5.5;
x=[ones(1,1000),zeros(1,1000)];
x=[x,x,x,x,x];
subplot(3,1,1);
plot(t1,x,'linewidth',1.5);
axis([-4.5,5.5,-0.5,1.5]);
N=10;
c0=0.5;
f1=c0*ones(1,length(t));
for n=1:N
    f1=f1+cos(pi*n*t)*sinc(n/2);
end
subplot(3,1,2);
plot(t,f1,'r','linewidth',1.5);
axis([-4.5,5.5,-0.5,1.5]);
N=20;
c0=0.5;
f1=c0*ones(1,length(t));
for n=1:N
    f1=f1+cos(pi*n*t)*sinc(n/2);
end
subplot(3,1,3);
plot(t,f1,'r','linewidth',1.5);
axis([-4.5,5.5,-0.5,1.5]);


	
